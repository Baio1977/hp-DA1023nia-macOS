name: Download OpenCore

on:
  push:
    branches: 
      - main  # Change this to your default branch

jobs:
  download_opencore:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up environment
      run: |
        sudo apt-get update
        sudo apt-get install -y unzip curl zip

    - name: Fetch latest OpenCore release
      id: fetch_release
      run: |
        echo "Fetching the latest release version from GitHub..."
        DOWNLOAD_URL=$(curl -s https://api.github.com/repos/acidanthera/OpenCorePkg/releases/latest | grep "browser_download_url.*zip" | grep "RELEASE" | cut -d '"' -f 4)
        echo "DOWNLOAD_URL=$DOWNLOAD_URL" >> $GITHUB_ENV

    - name: Download OpenCore
      run: |
        echo "Downloading the latest version of OpenCore from $DOWNLOAD_URL..."
        curl -L -o "OpenCore-Release.zip" "$DOWNLOAD_URL"

    - name: Unzip the downloaded file
      run: |
        echo "Unzipping the archive..."
        unzip -q "OpenCore-Release.zip"

    - name: Extract X64/EFI directory
      run: |
        if [ -d "./X64/EFI" ]; then
          echo "Extracting the X64/EFI folder..."
          mv ./X64/EFI .
        else
          echo "Error: EFI folder not found in the unzipped content."
          exit 1
        fi

    - name: Copy Kexts to EFI/OC/Kexts
      run: |
        KEXT_SOURCE="./kext"  # Adjust this as necessary
        KEXT_TARGET="./EFI/OC/Kexts"
        mkdir -p "$KEXT_TARGET"
        if [ -d "$KEXT_SOURCE" ]; then
          echo "Copying kext files from $KEXT_SOURCE to $KEXT_TARGET..."
          cp -R "$KEXT_SOURCE/"* "$KEXT_TARGET/"
        else
          echo "Error: Kext folder not found."
          exit 1
        fi

    - name: Copy Config.plist to EFI/OC
      run: |
        echo "Copying Config.plist to EFI/OC..."
        cp ./Config.plist ./EFI/OC/

    - name: Remove all files in EFI/OC/Tools
      run: |
        echo "Removing all files in EFI/OC/Tools..."
        rm -rf ./EFI/OC/Tools/*

    # Add additional steps for the remaining operations as needed

    - name: Clean up
      run: |
        echo "Cleaning up..."
        rm -rf "OpenCore-Release.zip"
        rm -rf ./X64
        rm -Rf Utilities
        rm -Rf IA32
        rm -Rf Docs
        echo "OpenCore X64 EFI folder has been successfully extracted."

    - name: Zip the EFI directory
      run: |
        echo "Zipping the EFI directory..."
        zip -r EFI.zip EFI

    - name: Upload EFI artifact
      uses: actions/upload-artifact@v3
      with:
        name: OpenCore-EFI
        path: EFI.zip
